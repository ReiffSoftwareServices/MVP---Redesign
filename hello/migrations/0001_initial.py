# Generated by Django 5.0.2 on 2024-03-06 22:00

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AdditionalServices',
            fields=[
                ('Name', models.CharField(max_length=50, primary_key=True, serialize=False, verbose_name='Zusatzleistung')),
            ],
            options={
                'verbose_name_plural': 'Zusatzleistungen',
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Prename', models.CharField(blank=True, max_length=50, verbose_name='Vorname')),
                ('Surname', models.CharField(blank=True, max_length=50, verbose_name='Nachname')),
                ('Email', models.EmailField(blank=True, max_length=254, verbose_name='Email')),
            ],
            options={
                'verbose_name_plural': 'Kontaktliste',
            },
        ),
        migrations.CreateModel(
            name='Contacts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Vorname', models.CharField(blank=True, max_length=50, verbose_name='Vorname')),
                ('Nachname', models.CharField(blank=True, max_length=50, verbose_name='Nachname')),
                ('Email', models.EmailField(blank=True, max_length=254, verbose_name='Email')),
            ],
        ),
        migrations.CreateModel(
            name='CostPosition',
            fields=[
                ('Name', models.CharField(max_length=50, primary_key=True, serialize=False, verbose_name='Leistungsposition')),
                ('Measure', models.CharField(choices=[('1', 'h'), ('2', 'm'), ('3', 'm²'), ('4', 'm³')], max_length=2, verbose_name='Einheit')),
                ('Price', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, verbose_name='Preis pro Einheit in €')),
            ],
            options={
                'verbose_name_plural': 'Leistungsverzeichnis',
            },
        ),
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('Name', models.CharField(max_length=50, primary_key=True, serialize=False, verbose_name='Equipment')),
            ],
            options={
                'verbose_name_plural': 'Equipments',
            },
        ),
        migrations.CreateModel(
            name='Firma',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=100, verbose_name='Firma')),
                ('Postleitzahl', models.CharField(blank=True, max_length=8, verbose_name='Postleitzahl')),
                ('Stadt', models.CharField(blank=True, max_length=30, verbose_name='Stadt')),
                ('Strasse', models.CharField(blank=True, max_length=30, verbose_name='Strasse')),
                ('Email', models.EmailField(blank=True, max_length=254, verbose_name='Firma Email')),
                ('Telefon', models.CharField(blank=True, max_length=30, verbose_name='Telefon Firma')),
            ],
            options={
                'verbose_name_plural': 'Firmenliste',
            },
        ),
        migrations.CreateModel(
            name='Geoposition',
            fields=[
                ('Name', models.CharField(max_length=50, primary_key=True, serialize=False, verbose_name='Örtlichkeit')),
            ],
            options={
                'verbose_name_plural': 'Örtlichkeiten',
            },
        ),
        migrations.CreateModel(
            name='Installation',
            fields=[
                ('Name', models.CharField(max_length=50, primary_key=True, serialize=False, verbose_name='Anlage')),
            ],
            options={
                'verbose_name_plural': 'Anlagen',
            },
        ),
        migrations.CreateModel(
            name='Inventar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=50, verbose_name='Bauteil')),
                ('Einheit', models.CharField(max_length=50, verbose_name='Einheit')),
                ('Beschreibung', models.TextField(blank=True, verbose_name='Beschreibung')),
                ('Preis', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, verbose_name='Preis')),
                ('Einheit_Miete', models.CharField(max_length=50, verbose_name='Einheit Miete')),
                ('Beschreibung_Miete', models.CharField(max_length=50, verbose_name='Beschreibung Miete')),
                ('Preis_Miete', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, verbose_name='Preis Miete')),
            ],
            options={
                'verbose_name_plural': 'Leistungsverzeichnis',
            },
        ),
        migrations.CreateModel(
            name='Level',
            fields=[
                ('Name', models.CharField(max_length=50, primary_key=True, serialize=False, verbose_name='Ebene')),
            ],
            options={
                'verbose_name_plural': 'Ebenen',
            },
        ),
        migrations.CreateModel(
            name='LogMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.CharField(blank=True, help_text='xxx', max_length=300, null=True)),
                ('name', models.CharField(blank=True, help_text='yyy', max_length=100, null=True)),
                ('source', models.CharField(blank=True, help_text='yyx', max_length=2, null=True)),
                ('log_date', models.DateTimeField(blank=True, help_text='yxcv', null=True, verbose_name='date logged')),
            ],
        ),
        migrations.CreateModel(
            name='Projekt',
            fields=[
                ('Project_Name', models.CharField(max_length=50, primary_key=True, serialize=False, verbose_name='Projekt Name')),
            ],
            options={
                'verbose_name_plural': 'Projekte',
            },
        ),
        migrations.CreateModel(
            name='Area',
            fields=[
                ('Name', models.CharField(max_length=50, primary_key=True, serialize=False, verbose_name='Bereich')),
                ('Contact', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='hello.contact', verbose_name='Ansprechpartner')),
            ],
            options={
                'verbose_name_plural': 'Bereiche',
            },
        ),
        migrations.CreateModel(
            name='Ansprechpartner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Nachname', models.CharField(blank=True, max_length=50, verbose_name='Nachname')),
                ('Vorname', models.CharField(blank=True, max_length=50, verbose_name='Vorname')),
                ('Email', models.EmailField(blank=True, max_length=254, verbose_name='Email Ansprechpartner')),
                ('Telefon', models.CharField(blank=True, max_length=20, verbose_name='Telefon Ansprechpartner')),
                ('Firma', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='hello.firma', verbose_name='Firma')),
            ],
            options={
                'verbose_name_plural': 'Ansprechpartner',
            },
        ),
        migrations.CreateModel(
            name='Geruestbuch',
            fields=[
                ('Geruestnummer', models.AutoField(help_text='Die Gerüstnummer wird automatisch erzeugt.', primary_key=True, serialize=False)),
                ('Grund', models.TextField(blank=True, help_text='Kurze Begründung warum das Gerüst angefordert wird.', verbose_name='Grund')),
                ('Anlage', models.CharField(blank=True, max_length=100, verbose_name='Anlage/ Equipment')),
                ('Ebene', models.CharField(blank=True, max_length=100, verbose_name='Ebene')),
                ('Oertlichkeit', models.CharField(blank=True, max_length=100, verbose_name='Oertlichkeit')),
                ('Eingangsdatum', models.DateField(default=django.utils.timezone.now, verbose_name='Eingangsdatum')),
                ('Aufbaudatum', models.DateField(blank=True, null=True, verbose_name='Aufbaudatum')),
                ('Abmeldedatum', models.DateField(blank=True, null=True, verbose_name='Abmeldedatum')),
                ('Mietbeginn', models.DateField(blank=True, null=True, verbose_name='Miet-Beginn')),
                ('Mietende', models.DateField(blank=True, null=True, verbose_name='Miet-Ende')),
                ('Preis', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Preis')),
                ('Ansprechpartner', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='hello.ansprechpartner', verbose_name='Ansprechpartner')),
                ('Kunde', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='hello.firma', verbose_name='Firma')),
                ('Projekt', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='hello.projekt', verbose_name='Projekt Name')),
            ],
            options={
                'verbose_name_plural': 'Geruestbuch',
            },
        ),
        migrations.CreateModel(
            name='Equipments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Laenge', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, verbose_name='Laenge')),
                ('Breite', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, verbose_name='Breite')),
                ('Hoehe', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, verbose_name='Hoehe')),
                ('Stueck', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, verbose_name='Stueck')),
                ('Stunde', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, verbose_name='Stunde')),
                ('Geruestnummer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='hello.geruestbuch', verbose_name='Geruestnummer')),
                ('Equipment', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='hello.inventar', verbose_name='Inventar')),
            ],
            options={
                'verbose_name_plural': 'Equipment',
            },
        ),
        migrations.CreateModel(
            name='Scaffold',
            fields=[
                ('ScaffoldID', models.AutoField(help_text='Die Gerüstnummer wird automatisch erzeugt.', primary_key=True, serialize=False)),
                ('Length', models.DecimalField(blank=True, decimal_places=2, help_text='Länge in m²', max_digits=7, null=True, verbose_name='Plan Länge')),
                ('Width', models.DecimalField(blank=True, decimal_places=2, help_text='Breite in m²', max_digits=7, null=True, verbose_name='Plan Breite')),
                ('Height', models.DecimalField(blank=True, decimal_places=2, help_text='Höhe in m²', max_digits=7, null=True, verbose_name='Plan Höhe')),
                ('Amount', models.DecimalField(blank=True, decimal_places=0, help_text='Anzahl der Gerüste', max_digits=4, null=True, verbose_name='Plan Anzahl')),
                ('Area', models.ForeignKey(blank=True, help_text='Bereich.', null=True, on_delete=django.db.models.deletion.CASCADE, to='hello.area', verbose_name='Bereich')),
                ('Equipment', models.ForeignKey(blank=True, help_text='Equipment.', null=True, on_delete=django.db.models.deletion.CASCADE, to='hello.equipment', verbose_name='Equipment')),
                ('Geoposition', models.ForeignKey(help_text='Örtlichkeit', on_delete=django.db.models.deletion.CASCADE, to='hello.geoposition', verbose_name='Örtlichkeit')),
                ('Installation', models.ForeignKey(blank=True, help_text='Anlage.', null=True, on_delete=django.db.models.deletion.CASCADE, to='hello.installation', verbose_name='Anlage')),
                ('Level', models.ForeignKey(blank=True, help_text='Level', null=True, on_delete=django.db.models.deletion.CASCADE, to='hello.level', verbose_name='Ebene')),
            ],
            options={
                'verbose_name_plural': 'Gerüste',
            },
        ),
        migrations.CreateModel(
            name='ScaffoldPosition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Version', models.DecimalField(blank=True, decimal_places=0, max_digits=4, null=True, verbose_name='Gerüstversion')),
                ('Type', models.CharField(blank=True, choices=[('1', 'Anmeldung'), ('2', 'Erweiterung')], max_length=12)),
                ('RegistrationDate', models.DateField(default=django.utils.timezone.now, verbose_name='Anmeldedatum')),
                ('SetupDate', models.DateField(blank=True, default=django.utils.timezone.now, verbose_name='Aufbaudatum')),
                ('Logout', models.DateField(blank=True, default=django.utils.timezone.now, verbose_name='Abmeldedatum')),
                ('AdditionalServices', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hello.additionalservices')),
                ('Scaffold', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='hello.scaffold', verbose_name='Geruest')),
            ],
            options={
                'verbose_name_plural': 'Gerüstpositionen',
            },
        ),
        migrations.CreateModel(
            name='ChosenCostPosition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('TargetLength', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, verbose_name='Plan Länge')),
                ('TargetWidth', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, verbose_name='Plan Breite')),
                ('TargetHeight', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, verbose_name='Plan Höhe')),
                ('TargetAmount', models.DecimalField(blank=True, decimal_places=0, max_digits=4, null=True, verbose_name='Plan Anzahl')),
                ('TargetHours', models.DecimalField(blank=True, decimal_places=0, max_digits=4, null=True, verbose_name='Plan Stunden')),
                ('Length', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, verbose_name='IST Länge')),
                ('Width', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, verbose_name='IST Breite')),
                ('Height', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, verbose_name='IST Höhe')),
                ('Amount', models.DecimalField(blank=True, decimal_places=0, max_digits=4, null=True, verbose_name='IST Anzahl')),
                ('Hours', models.DecimalField(blank=True, decimal_places=0, max_digits=4, null=True, verbose_name='IST Stunden')),
                ('Requested', models.BooleanField(default=False, verbose_name='ist freigegeben')),
                ('Confirmed', models.BooleanField(default=False, verbose_name='ist bestätigt')),
                ('CostPosition', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hello.costposition', verbose_name='Leistungsposition')),
                ('ScaffoldPosition', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hello.scaffoldposition', verbose_name='Gerüstversion')),
            ],
            options={
                'verbose_name_plural': 'Leistungspositionen',
            },
        ),
    ]
